<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACrIQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAIABJREFUeJztnQmYVMW1x4kxyctL8vLyEqPCdA8iEUWNe+IuMa6JcXtG
        jUaTmIAmUaO44BPN7dsDigoq4DZsCqLAICguLG4gImvX7QGGfV8GZEDWQZYZpl6dO/Qwc7uq19tdt/v+
        f99X38BML1XnnnOq6lTVqVatAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoKgEbk4GGLdAiF251E9rSN016eYaGdU/jRg
        sruCJnuY5Ky7PgA00dGo+rZQztFB0+LNyuaAaV2qu27FAMmR5NlSvqzijPLIt3TXDYBWosc3HcbfWEKs
        BiOB7KCeP974Y/K1DN31A4B6qI1SBaUSZl1016+QoemUUramVa27fgCQku5VKmmIddNdv0JGONdHVLIV
        f9uju34AtBJD0akqJS01op1016+QsQOrauc6RXf9AGhVGq48LWCyfZI56ijddSsGJAFWTvIWzvVU3XUD
        wIacgFDMz+zpQIitpwAVotTuQHIkedKc/6B8p8D4AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        co0x+fBSk50TDEVvDYTY/VTo3/Q7+pvu6gGQDsEn5/2oxIxcHgxF/kl5HxpL5J8BI3oZ/U13/TxD27B1
        ihDO0KDJvlKf7ba2iL+/VhKOnKy7vgCo6PDUtB8IXb4nELI+FnpblyBbUV3ja9jdRxhV39ddby0cbUR+
        ctDwDyQQlKPQa9lrrZ+Y9WPd9Qcghn0kOcy6JEz/pi6baXTQvu/S7+huR95obVQeJ4b4izMQVmxEsDwQ
        jp6oux0AtC6bHRC6bGWsy4fKnDbG3BLd7ck5ZLhi+LM9W4HZn2FYHXW3B/iXUiNydoa9vkqnN7QxI7/U
        3a6cYQ/7TWuFSgAnPzWX3zV6JS+btJ6HRbmzYiU/Sfwu0UgA0wGgA+p8hPHvSGTQnV5YwO8du8rWZSr0
        b/pdso5NOJbjdbcvJzTO+eMbfVrvefxNtoXXHWjgTuh3wyOb+WnPzFM4Afaq7nYBf0GdDnU+Mn08Jhzl
        D727hi/bvCdOl2MsrdnDHxy3xn6tQqeXlhhV/6O7na5iR/slAb9LXlrIq7fvUworxnrxml+L10pGAfVY
        HQD5RMz535AZ7rl9q3jVxq+T6nKM+Rt283Oer1KNBF7X3U5XkfX+1POnYvwx1m3bx0+VjQQwCgB5Ihhm
        Zwh9a3Dq4GUvL+JbdtelrMsxttTW8UtflnRsorOkZLK62+sOxuTDG9fyWzaShv3pMmzOZtkoYAs2C4F8
        IHRtYlxHJjol6pwyZa2iYxMjjfG62+sKQcM6Vxbwk835k7G/voGf2Cs+MEgRWd3tBGqCRuT0gMm60u44
        3XXJlGN6zjtSNo0dFU2/I3MywtoiHwUYs47S3e6sKQ1btzgbR9H+TOlSsTJOWCVhdrPudgI5tDuOYjXN
        5reDWxn8MN31SpdgKNpZFumvb0i/I3NCn3FRf8kKQcj6q+52Z41oyIPOhvX4cH3GwioT740bAYSsB3S3
        E8RjX+ApmTMLxR7RqqLim7rrlw6iR37b2Y4+kzdkbfwxnvl0Q/w0wLTG6G531pBxOhtWloUDoDXVeEGx
        rrrbCVqiNP4CdQK0POdsA1tX65oDiKytlcUBFutud9aUhKw/OBtGm3wypfMoTAG8TlLjL0AnIEYAu5z1
        r9m13zUH8OXO/bIRwA7d7c4aWRCQdvhRQC9dEAT0Pikbf4E5geZxjFjJRIdV7BOfJZFPne52Z494uEE6
        9eRoHO3wS5ehs2uwDOhhxPO4V2X85/RdzEuVjoC95vXAoGwEsMnFEcDGYh0BEPSAnY2j9dP1aWwEovXS
        U56Wbgkeort9IHHPf2X5Kl4+q4Hf9dZmtROgkYCHHXmuYwBzijUGQLQx2M9la6i0vTeVTRRk/Be/qNgK
        bFSepLt9ficV4x84i9ulUJ1AIGSNddY356sAIest3e12DdkogArtgnpdTAdk8yn63dA5m1U9P3p/D5CO
        8ReyEwiGrb856+rWPgDaFCfbB1AaZnfobrdrJDpFRYWCe7TJJ3Z8kqL9soBfs7Ks6E5NFRiZGH+hOoF2
        RuVPZYHAkVb2OwEpHiYb3R7V0zpCd7tdxT5H7UZCEJNtE97xBN3t8TPBBAG/qwau5gNmyg2/eelcUZPA
        CbChrTj/hu52NkfUa4JsBLs2i7MAa7bulY5whY5/oLu9OQEpwQofN4w/NSfgra2wdEJPFsuiE310si9d
        Nov3XCI75i6+g47Q625vzmicDrBX00oK2jj8GoJhv17cNP5Yuf7VteqpgMegs/qyutLZ/nkbdqds/HOr
        d/OzFfkA7NGPH6BkHo2OIH6fQLOyudHwEe3XTS6Mv/v4nfzYHpXyqV6IddfdZieU11+2JEhF9Np2tp8l
        NeqMQIs37eFd31ltv1bR5sWlRvS/dbczv1RUfJN289G24djFIPRvO0liAewS8wP5Nn4xOpxV0mf6d3W3
        Wwbl7UsWy7qw/wJ+z5hDOQHp3xf0S5IT0GTb2obndtDdPgBakE20X1Uen7iLt1f1/KbFvD7Vo86JMvmm
        HcNSl+oS0zpLd7sAaAGMXw3l8hd1npO98bNZAYO11t0e4DGoRwiGrHftq6QM64Z8f7+OYX+7XpEf5rud
        WUEp7+hmoMxGA5vF+/7ltT0PwAPQRZKiN9zj6B0fzdv3o+dPC7rnz74M1GQfCaPer5zn099C7EPh3P9x
        5DOV39Ndb+BBZMafTycA488OiuKLNl0aMNldsduB6d/0O/9F+EFaJDL+fDgBGD8AmkjF+HPpBGD8AGgi
        HePPhROA8QOgiRKDXaEy/vP6LeFXD1qjdgSh6EPZfj+i/QA0I2hELrYDN6JXzPWRTLosQ2X85wrjf3F6
        PR8wK8F+eTO7LbPo+QE4SEej6tsBk412KO1mit7m4vtSMf6YUeXCCcD4AWiGMAhTPsxmNW6PBNIx/lw4
        ARg/AA6Ekm5UzrXDrItb35OJ8bvpBGD8AEgQhrFXHWxj3dz4jhLTuihRwC+R8Tc5gZmcXzMks8CgjoAf
        Nr+AgiAYsqaqjEoocSdXvsNk87Mx/mycAIwfgARQyqeAyfbFG5M1yq3vEKOMnTJj6TpuW9rGl9QJmOzh
        2PfC+AFIgca8b9Zn9nQgxNYL4zfOKI98y63PV6VHb1dWybu9vyMnTgDGD4BH6PDUtB+IUcYXrjuBwYmm
        AzB+ADwDHQMVRjlFZkDHlEX5Q+9tT98JzEq8OuAsiPYDoBGdTgDGD4AH0OEEYPwAeIh8OgEYPwAeJFeB
        wVuHb7DfT47k5mHVCPgB4FVy4QSolM9ssEsm74XxA5BHcjEdyLTkc9hPN+/a+fNoz4IRuditzwWg4PCC
        E8in8dNR62Dc1XCsws3NVwAUFDqdQL57/njjj21esgy3vgeAgkOHE8h3tN8+lqzer1Dt5ncBUHDk0wno
        WOoTn/uIygHQkWm3vw+AgiMfTkDXOr+de1E1AhBtzsV3AlBwkBMImGxyLpyA7k0+khyMdE32vlIjemou
        vxeAgiIXTkC38RMU7aeAH835Dx7BngLjB0CCm07AC8YPAEgTN5wAjB+AAiYbJwDjB6AIyMQJwPgBKCLS
        cQIwfgCKkFScAIwfgCLGPkocYtNkBk5HiXGkF4AiJ9FIAD0/AD4gVScA4wegSEnmBGD8IG8EjcjpdN8e
        bfEMhKwNdP02Ej3kHpUTgPGDvEHGL71nz2QVuuvmBygwKJzvxGbG/wkCfiBvJLxp14z+Snf9fAHn37BH
        YWF2Bv1bd3WAmqLLi2if7FIFokKsm+76AeAVijIvIs351Q4g2ll3/QDwAkWbF5ECforev+ZoI/IT3fUD
        wAsUbV7EjkbVt2kY4zT+oGFdortuAHiFos+LWGpEO4kh/0M07M91zx/sETnazjMXsv7a+J2sG/0sDbM7
        7N+Lv+fy+4F38apuIC9iNhj8sBLTukg81HJRlqe4DXaZKK+UGOxCRMaLmALSDeRFTJP2fZd+JxhmXdJ4
        sOoHLkYmNF3R3SbgDoWoG8iLmAY0ZBJzo0VZPlxntHV5qWldqbttIDugG0VMqTH5P4R37Ovqw40Pugw7
        2oj8p+62gvSAbhQ59lppyIoke0jtyqL8twMW83vHruJPfFTNn/y42v5J/6ff09+Te3w2+6ie1hG62wxS
        A7pR5JT0iLYRgl+a6MH8cfgy/t6Crbx2Xz1PBP393aqt/NbXlyV52GwJfa/utoPEQDeKHDq5Jh5wleph
        XDNoCZ+5elfCB6tihngfvT/Bg54ffHLej3TLAMiBbhQ7Bj9MCHuCajj36qwa3pDR4z0EvX+I+BzV8C9g
        sg+wVOhBoBvFjxDygzLBn/zUXP75ip1ZPt6WTBWfR58rfdAhdr9uWYCWQDeKnFIj2lYIeLdT4Mf1rORz
        q3e7+oBj0OfS50sCP7XtjEhQt0xAI9ANHyCEO9Ip7FJRKEiTS96Zv9X+Hslwb7humYBGoBtFTmuj8rhg
        yKp3CvrfE9bl9AHHeOyDtRJPb9WXGKy9btn4HeiGDwia7HmnkE8Sc7CtX9fl5SF/tbuOn9hLMucLWX10
        y8bvQDeKHNoTLYZUm5wCfuHzL/PygGP0F98nCfh82cqYfLhuGfkV6IYPCJiRC2TBnR17Em/icJude+ul
        QZ9Sk52jW0YpY/DD2oStnwWNyFV2rjn7+CvrRpHrQNi6vY0Z+WW7XpEf6q5mqkA3fIAYSj3uFOxdo1fm
        9QHH6DxqhczTd9cto0Qc3BN/08HjpfI0U475q/g5JxCyykqNyPG6658I6IYPEIo41inY1yObtTzkobNr
        JA/Zeku3jGTQ/nRRvx7C8LclNfqEDoFNCRjRy3S3RwZ0wwcIBV7gFKy1vlbLQ2braiVGwubrllELaEdc
        mHUJmNaOrAzfqcx0qYhhddTdvOZAN3yAGOZtcQqWIq862FJbJzOOzbplFKONMbdE1OdzNw2/pROw9ohe
        7V+62xkDuuEDZDcJ1R3Idld3Zuyrb5DN8/bqlhFBAbxgCnP89j0q+QX9l/JrBq/hN79ebZcbh67nl5Wv
        5Kc+syDV0cAgL0S4oRs+QPaQ99fjITenMbElq1UZ7DFlUX71oDX8sQm7ePnMBj5wFleWZ6fu550ravgZ
        fRYmcQTsbd2XVEA3fACGeYkJGOxMoWg7ZUZK21R/M2AVf3ry3oRGLyvlsxr4P8du4Sc9NV89EghZr+s8
        /Qbd8AEI9KixI/0htl5mnCc8Oc/u8dM1fGd5ecYBftXA1YlGAg/raj90wwfIlnqGzcFST6Ns2Psyozyz
        zyLee8q+rI2/efnLyC95aVg6CthfYkR/oaf90I2iR3jRx5yCvbNCz2aPv42UbPYwrUd1yCUQjtwoM/7T
        ei/g/b+od9X4Y+XO0fFKfnCua7WqqPhmvmUA3fABASNyvlOwP/PSdk8jcna+ZUJ56YVyrXHW5bgn5vJe
        n6Y/30+nXDdEcvqNStj6W77lAN3wA8bkw2UHPvrn+cBHv6kbZR5+o5aej66ykhjhA+O25dT47eDgzAZ+
        1nOL4h1AyFqe96VB6IY/kB35POHJSjvymg+27K7jHT105FMMuSuddTm/39KcG3+sdJ+wSz4VMNjV+ZYF
        dMMH2CfYJEkfHh+fn6QP3WVJH0yrTkfSh7Zh65S4oaYoxqTavDkAKp1eiE+VrSPoBd3wCcLTvylT/HHa
        0j5Zw7TIQXIC7rx+S/Jq/FS6vb9D0uuxWh13KkI3fEDbMlYq2+2Wy8SPlarEjybbRfvudchBKNcnzvp0
        GV2TdwdAG4WOf3KeRDbR8/ItE+iGTwiYrKts7kkpmqe6nPr5s+U77dRS0rmuxgMxQtG3OuvT65M9eXcA
        VC4vXykzgLt1yAW6USTY97eb7DUx1H2OPHuLP3L+Dbp8QSZ4uqxh8Ex3Ln8YOGMTPyasuBcuZL3r3P5q
        90Cm9awwzlep/rmSjX3nnaM+x/ao5ANm5t/4qfxphCwVltU/V+2HbhQxJX2mf5eURwiqoZlA1zovXqSU
        VeJBR6UPQJSrBi7m01dldv1TZG0tv35Ietc/HbyIcm2zeXADKSjdSe+6jMKRk511OvPZhVqMn8r947ZK
        5r9stNvtpqxGdrS/CHSDdJx03W0ZFTRtw3M7yPZ1H3zQo5yvty+ANNkS9cOw7AsdKUhDmzQSQZtG6HW3
        JLkAMhBiiwMGa+2si6hHhfT1QhGpXW7KKWhY5zq/51wNAcBYeeQDWSDQmuhmmyktmWzZs5B1g+4vpHTm
        bsqpYCk1rSuTp61i/+t8X6N3ZbMTv8+yh2tXli/i94xZxcs+XG9fAU0/6f/0e+VwrqWizZRdAa3ajttM
        MXZS+9ySld8cgGjvJcWsGyVG9Fq3ZFWQiOHQ38UDPJBcyKwmaMxu53w/DbOFIPsmfX8WhZZ0ZEO2QFnk
        2GAKCTjosAzt3HNDXrIpAJ3bL8YpQDAU7WzLroh1g/YvUHZmN+RVcIjGG2kKexFd/yz7rFIj2kk5hci0
        hNjSEjNyuez7Wj8x68fJhpnxJftjs34JApKsfKUbIevxbGVWUAjPbKqEcUG/BfymoUtVgpra4alpP5B9
        Jm1AsffIi4eT3QNmS0pC7C+qbDftjZn/Jeo/TfZeqveF/ROk1QpFH8pWdqJ+Xzk/98lPi2cZ0L6rQCG/
        i/oXrm7cPGyZrdsJnICRjdwKhkQPmKKslNGFgi8qQ6Kjp8EekaOVX2AvB9GFEeyl1B+48Ngh9iKdLkuU
        4YYCTKqAFCkn1Xvb1/X8D8PUQaNs14nF+z92fmaXCg0bgWY28OOfkGwEMqxzM26bYi2fCgXutgv5bi9g
        3aBzA9clXknQllwlL4ge8NYWSznNCgVe9tYdaIrALt60xz7UoTCi1UEjcnoq33lMz3lHlprRX5WG2R2l
        IesBckD00/6/GB7SsDqVz6HUWy2WdJoVqueSmj1NdafElP8aq8qiww5kE/yRnYHXEQh8RLYV2GS7Ms0T
        WGqw61XxoK7vrG6R7LOQdYN0/O63VilGAayhJGT9IRP5eR7yoJQkUdZwY8I66SaNz1fs5B2eUD5oCq4Z
        uU5Mad8/1zhlqZPV43hRvy9Wxu80I3199H3F2XnatpqikjppY7CfS2U4Mb+HgS56UTbKYRWZtKnEtM4S
        798ta9dj44tPN6g9dFhJWnfT2qNjO3VOIU8rHsoGWYPve3t1wh1atHHjeMWDbnzYYthlRK5yvdJiuGff
        oadagz7o3WesVm8soXY9/O4a1UhgnSpwlQxZnc7pu4QPyJPxSw8C2crLfpduWw4GzdbJPu+R99YWrW5Q
        B6EeJVrVqY4+vA/dVGOyj2QNvWPEipTyuM9es4uf1lt28KRFmUNrwtnuwKP3i3nsDaIHiST6vtNFfWh3
        WDLqGxqk98Yd7KnGZlJHGqLKPu+Bd/OUEORZlxKCkCGZ1jhZWyi1F8mumHWDdP8vI+S6IUaJH5LtZFNf
        T0A3z8oaeO3gJXxPszl/Mjbs2G+/J8mD5gc3jgyh3qjUmHVUKnWk11EyC9qvLYxye7LvoGDlxp37U647
        tfM3Axareqk705WpnRKM5rqOz8pHSrBrB6umNenvdRDyvkf2WbRld6+PdOMaRd0L/mARJUUISuZ2dEKr
        evu+lIUUgy596PHhevtwR7IHcaiwdcLIxtOmjYMbQ3rRT8ppT79XpdWWFfpe2i2Wye0z67bt46c8Leup
        2K7WZbMD6crW7okkdcxlUtAuqqSgpsXSTX+lOsJ72jPzfKkb0tOFQj60qShd3fAMqqH/xEXb0hZScxZt
        +pr//jXFenCOyo3i+yj6nA2fLt2hSiAxJiP5hqx3ZXWlA0LPuJ0WfESCtOCmdVb6uhE/9CfZTF62w5e6
        8cGCbSonNSkT3dCOUOprZA16zKVUTeRnxy/cxq8ZlHzol02h4Rl9j1sXTnV7Tx4UlJ4ZoHXrkPUnYegj
        hDwfOfKZyu81/7MdQFMsP1Gyju4uXAzy0nQxfRmoWLaieoesB5zVpii2qPdgOsEn68HsIbXks2jVxA0K
        VTf+T7FqlElwVS/G5MNlGy3Ofq4qrXl/qsxZW2uvrarWhtMt9Dm0LyGVQE661O6r52c/XxX/vSFW1Tzo
        c/Ao6cQWiiCGpc7NKHQ+QHVghnrUK8pX8qcyuBqMthffP26bmK5J6npIMYfH1cdgF7a8s4/tEm27rekF
        Yqog25p7jpDJ7v3+1g1q/y+elV3FxpZ44TLWlKHtkjLh0dHKXEKBo0/EMJuWj64oX5TyfPDYHlH79eSB
        aZi+L8cXTL63YKvcoELsJpIfbU4R/6+Wv8b6u1Peja8XhqZoH10O+rtBq/mj43fyV2Ykvhy0j5g6/HXU
        Jn5678SXg9IKhnOdnUYotBogdxbWsCOMqu8Hw+yPsr9TT5pLstUNel8+dGPM3K9U8v5Tvuw3O+zeP14J
        aLiU73tbKSCzYOPXfOKi7byi8is+aOYm/tK0L+2f9H/6/cIvv9ZypbRsnko9YyAc7Z7ohCQdI43LhtOK
        et7oL+yTcUkUmq4HP6/fUvu24Nj14De8to5f+spKfkqK14OL51suC/oJI38hsdOILBSjkpXO39M++Xzj
        Vd2gb7t6kGTFSIyoC+KeAVpvdVaehqLWOj2XNnoVGkKmO/xs5gSmUZYcp+xpw5Uq8OpGoV1qqqWpUjNy
        XUpHuyWFQTdaoNKNgsgfICr6mbPilFEFxHNzgkNDyQurkG4UEb8LhK3bZVdnZ2n8n1B2Htkzb9wLH7+k
        l0q5bfhy3Y/Bk8hOPdJBsJwbcDaQgsge8qTF23XL05NMW7kzqYH86qXl/KSnFYG4kPWc6oQarRCIKUVY
        dnw4zdHGp+Izfq185mF2gux6Liq/GbDKnnIk+nzZXnnA7aXy+OfNGugilNxZcJY0KlzLSp/XtyqlLZ1+
        hOJJHXupDYTm5xSNNz/czduVKQ6+mNawRJdx2Ak1GzcNjVQZqsOp1FOaK/HaUDJls4/WStKUU6HVBzqb
        0PPjPcrYQttwlM/dkJu8/YUO2cw50tUiD+cNEBVc5qzwgOmbdMvSs4Qmyk+EUczk72M2t4jO3z1WHh2O
        DQ1TOjxC+wrKIsfSnoNgmHWxczOIQvN6is5TIFGVVMMJTTMaT67F1+fMPov4i9MPNNX9+c/r+MmKUQzt
        /FuxZa/uR+FJKCgpGZEtztpQc4HoZTrKFDmdfdF+gqLNKuP/84gvpUt0shRczYaHNdTT5/o5UwJMugNQ
        VY9TRW/f57P9cXXv90WdfVZB9h5K8JEsQ68foS3R8pGTu9mmXcFOqBA3B1ysW4aehFZEVOvQt7+5MfGW
        3JEJnIBd2Nu0Ocj159uYm//uRNMIOofw7NR4429yAtPq+am95dOBzqNW5n2ZuBC4/JX4k5di6nWf2883
        a0TFJjgr2nvyBt3y8xyUMkw6txPljlGbUtqld+foGnv+nMAJHLB7aUrPlSCNVSo0BhMj9yU7GHP284v5
        cwmMP1boNaqYQDmmi3E8/Um1xAGwD9yyW3egc92SYFB0PQI8TlS5AWgzTjpbdf89cRfv2Eu2bTROWVaJ
        n73oWqqU5vfiWVLwLxCO/pkULZXU3NcNWZt0h2HzQluTZdMBGhXNR1CwBbRHQvJMt2Xr2F1FNv+nPdMa
        Nth5mgkL5Se+KKcfJdpId78+9aa/fml5UifgGBksFM76HfH/IcGQ1YecAyW9bDxwxCancuY9Vigp6L1v
        f5XRIaMH39suPRn5WzFtxKrRIUgWstRnnooDlIatW5wVpJNY4BB0COiXz8X32Mf1nMt7Z3l09yFhTD9X
        7RXIQSHDvWrgaju6n029bxq2Xvr5FCAFh6AEKfFyiv5et903IcvzT7nwwCHCk+TK/qBLabxennHAPsST
        6PRetqWtGbXX98Mf7Xalzqr0YjR6pCw/oJEHx0mOkHvpMhExtHzTWUG6jhk0QhlfZFH/S19e4YohOY3q
        vne28gv7L7UN1g3DP7HXfH7j0PWuJxmhEvqwVppopPsH7uQGKAboSnKnfOyj2F5BzCGnOCs4dQW2eMag
        o6RO+dAW2T45MKjmpe+0OnsD0RXlq+zIu2zOLSs/E9MSOjF4y+vVPDRpd86zDV//avyGKDqGm0lqsGJk
        yvL4LMy0RVu33TchuwttHqK5NqTEpMxO+SRb789FeXF6PTcm1dqJPv4xZou97EipvmhZkYJ5D7+3nT89
        eW/e0ovHSv9p9dJVAXKcgPPK6t0SB2At1G33TQQlN6Gu/ArbO4l/T4jv3ToIZX8hR4k7C7Xc9sZG6Sig
        ZhdiAbRVWjIF2KTb7puQHQWle9D8DqU/O1mS7fX2N/Lf+3u9kEPsIBkF0H54v7Oltk42Bdip2+6bsE+Q
        OSqY69RJhYAsvRPN/dH7y8utwzfEyYsu1vS7JpEtSWI1dbrtvglZIAlwO120Uy7XDF6j3dC8WmiVQbYi
        MGOV+ootvyCzMd123wQcQDy0ji2Luocm5fcSz0IrnV6Iz5KEJUE4gIJjpLUlTiZn9Fmo3cC8Xu4btzVO
        buf2rdL9OLUDB1Bg0OWWTpnQurpuA/N6ofiI7KTj0prsbt4pdOAACghKJX1ir/iI9uMTs7+pxw/lgv7x
        sRO/Z5aCAygg6EirUx60uy6TE39+LLKkJ13EiMrPwAEUEKOi8fN/Orar27AKpVCg1Cm/8/st0P1YtQIH
        UEDIdv/d+sYG7YZVKIUuJHUeZKIVle17/Js3EA6ggJBd+9V1nDvHfv1SZHcTzljt3/0AcAAFBN2C7JRH
        r0/Tv6HXz+XKAfFXktOdfX6l4BwA7eH2Y3lRlGPKJPJolicfJXm5UZIt6LY3lmt/vrpKwTkAlEPl2B6V
        2g2q0ModI+X3JqAcKrrtvgndgvB6aQ8HkHa57Y1k9x+g6Lb7JgIha4NuYXi5ULIL3QZVaKVzRY0YGmQT
        AAABUUlEQVT25+bpEmLrddt9E6JC92oXiIcLJb7UbVCFVh4dn/zmZN+WEGugW5p0230LAkbkfMpUGqQ8
        874u8QlSaWurboMqtPLYhF1xih8wrTX6n6/mYttY9Dzd9g4UlBrRTnAAuXIAbLLu5wtAQuAA4ACAj4ED
        gAMAPgYOAA4A+Bg4ADgA4GPgAOAAgI+BA4ADAD4GDgAOAPgYOAA4AOBjZA6AbualSzhRUi/XDo6/URkO
        AHgemQNAcafAAQDPAwcABwB8TGuj8jjdhlKsRTiA4bqfLwBJCZjWGN3GUnQlZH1dYlpn6X62ACTH4IcF
        DesGobg9grqPjxZBET1/1xKDtdf9WAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFq1+n+YCwkSxr2aogAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>